{"ast":null,"code":"import _toConsumableArray from\"C:/Users/humon/Documents/git_hub_repo/react-expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/humon/Documents/git_hub_repo/react-expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import NewExpense from\"./components/NewExpense/NewExpense\";import Expenses from\"./components/Expenses/Expenses\";//Array of static expense data i.e. 4 expense items\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DUMMY_EXPENSES=[{id:\"e1\",title:\"Toilet Paper\",amount:94.12,date:new Date(2020,7,14)},{id:\"e2\",title:\"New TV\",amount:799.49,date:new Date(2021,2,12)},{id:\"e3\",title:\"Car Insurance\",amount:294.67,date:new Date(2021,2,28)},{id:\"e4\",title:\"New Desk (Wooden)\",amount:450,date:new Date(2021,5,12)}];//App function with 0 parameters used to render entire application to root in index.js with default data at start\nvar App=function App(){//Array destructuring assigning DUMMY_EXPENSES data into 'expenses' while creating a function 'setExpenses' to allow us to save the state of expense items\nvar _useState=useState(DUMMY_EXPENSES),_useState2=_slicedToArray(_useState,2),expenses=_useState2[0],setExpenses=_useState2[1];//Event function used for setting new expense 'add' is defined as an action i.e. adding new expense, 'Handler' is defined as a event i.e. button click\nvar addExpenseHandler=function addExpenseHandler(expense){//Set new expense state and save previous expense state. i.e. 'expense' => new state :: 'preExpenses' => previous state. Previous state is saved by utlizing the spread '...' operator\nsetExpenses(function(preExpenses){return[expense].concat(_toConsumableArray(preExpenses));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NewExpense,{onAddExpense:addExpenseHandler}),/*#__PURE__*/_jsx(Expenses,{items:expenses})]});};export default App;","map":{"version":3,"sources":["C:/Users/humon/Documents/git_hub_repo/react-expense-tracker/src/App.js"],"names":["React","useState","NewExpense","Expenses","DUMMY_EXPENSES","id","title","amount","date","Date","App","expenses","setExpenses","addExpenseHandler","expense","preExpenses"],"mappings":"4WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CAEA;wFACA,GAAMC,CAAAA,cAAc,CAAG,CACrB,CACEC,EAAE,CAAE,IADN,CAEEC,KAAK,CAAE,cAFT,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,EAAlB,CAJR,CADqB,CAOrB,CACEJ,EAAE,CAAE,IADN,CAEEC,KAAK,CAAE,QAFT,CAGEC,MAAM,CAAE,MAHV,CAIEC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,EAAlB,CAJR,CAPqB,CAarB,CACEJ,EAAE,CAAE,IADN,CAEEC,KAAK,CAAE,eAFT,CAGEC,MAAM,CAAE,MAHV,CAIEC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,EAAlB,CAJR,CAbqB,CAmBrB,CACEJ,EAAE,CAAE,IADN,CAEEC,KAAK,CAAE,mBAFT,CAGEC,MAAM,CAAE,GAHV,CAIEC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,EAAlB,CAJR,CAnBqB,CAAvB,CA2BA;AACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB;AACA,cAAgCT,QAAQ,CAACG,cAAD,CAAxC,wCAAOO,QAAP,eAAiBC,WAAjB,eAEA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAa,CACrC;AACAF,WAAW,CAAC,SAACG,WAAD,CAAiB,CAC3B,OAAQD,OAAR,4BAAoBC,WAApB,GACD,CAFU,CAAX,CAGD,CALD,CAMA,mBACE,oCAEE,KAAC,UAAD,EAAY,YAAY,CAAEF,iBAA1B,EAFF,cAIE,KAAC,QAAD,EAAU,KAAK,CAAEF,QAAjB,EAJF,GADF,CAQD,CAnBD,CAqBA,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\n//Array of static expense data i.e. 4 expense items\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"New TV\",\r\n    amount: 799.49,\r\n    date: new Date(2021, 2, 12),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\n//App function with 0 parameters used to render entire application to root in index.js with default data at start\r\nconst App = () => {\r\n  //Array destructuring assigning DUMMY_EXPENSES data into 'expenses' while creating a function 'setExpenses' to allow us to save the state of expense items\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  //Event function used for setting new expense 'add' is defined as an action i.e. adding new expense, 'Handler' is defined as a event i.e. button click\r\n  const addExpenseHandler = (expense) => {\r\n    //Set new expense state and save previous expense state. i.e. 'expense' => new state :: 'preExpenses' => previous state. Previous state is saved by utlizing the spread '...' operator\r\n    setExpenses((preExpenses) => {\r\n      return [expense, ...preExpenses];\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      {/*New Expense component used for rendering new expense form i.e. title, amount, dates and buttons. Contains one argument for storing 'addExpenseHandler()' funciton which is passed into 'onAddExpense' props*/}\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      {/*Expenses component used for rending list of expenses. Contains one arugment for storing array of 'expenses' which we set the state in our 'setExpense()' function then passed into 'items' props */}\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}